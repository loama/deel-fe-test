[{"/Users/jaime/GitHub/deel/deel-fe-test/src/reportWebVitals.js":"1","/Users/jaime/GitHub/deel/deel-fe-test/src/App_class.js":"2","/Users/jaime/GitHub/deel/deel-fe-test/src/index.js":"3"},{"size":362,"mtime":1610993390228,"results":"4","hashOfConfig":"5"},{"size":2038,"mtime":1610998263619,"results":"6","hashOfConfig":"5"},{"size":506,"mtime":1610993874371,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h6mtrp",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jaime/GitHub/deel/deel-fe-test/src/reportWebVitals.js",[],"/Users/jaime/GitHub/deel/deel-fe-test/src/App_class.js",["15"],"import React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// options.map((option) => <li>{option.value}</li>\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { options: [], value: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleChange(event) {\n    const value = event.target.value;\n    this.setState({ value: value });\n    const self = this;\n\n    const response = await axios.get(\"/api/countries.json\");\n\n    const data = response.data;\n\n    const options = [];\n\n    if (this.state.value.length > 0) {\n      for (let i = 0; i < data.length; i++) {\n        let option = data[i];\n        option = option.toLowerCase();\n        /*\n          TODO we should use regex to match the string instead of toLowerCase(), that is just a hack\n        */\n        if (option.includes(value.toLowerCase())) {\n          const changedOption = {\n            __html: option.replace(\n              value.toLowerCase(),\n              \"<div class='match'>\" + value.toLowerCase() + \"<div>\"\n            ),\n          };\n          options.push(changedOption);\n        }\n      }\n    }\n    self.setState({\n      options: options,\n    });\n  }\n\n  render() {\n    const options = this.state.options;\n    let listItems = [];\n\n    listItems = options.map((option) => (\n      <li dangerouslySetInnerHTML={option} />\n    ));\n\n    let emptyMessage = \"\";\n    if (options.length === 0) {\n      if (this.state.value.length > 0) {\n        emptyMessage = \"No results matching your input\";\n      } else {\n        emptyMessage = \"Type something to search\";\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"navbar\">\n          <img src=\"/logo.svg\" />\n        </div>\n\n        <input\n          type=\"text\"\n          value={this.state.value}\n          onChange={this.handleChange}\n          placeholder=\"Australia\"\n        />\n        <div className=\"list\">{listItems}</div>\n        <div className=\"emptyMessage\">{emptyMessage}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/jaime/GitHub/deel/deel-fe-test/src/index.js",[],{"ruleId":"16","severity":1,"message":"17","line":68,"column":11,"nodeType":"18","endLine":68,"endColumn":34},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]